<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ucsc Genome Browser on Not A Rocket Scientist</title><link>http://localhost:1313/tags/ucsc-genome-browser/</link><description>Recent content in Ucsc Genome Browser on Not A Rocket Scientist</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Thu, 02 May 2019 00:00:00 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/ucsc-genome-browser/index.xml" rel="self" type="application/rss+xml"/><item><title>Use Aliyun OSS For UCSC Visualisation In China Mainland</title><link>http://localhost:1313/posts/2019-05-02-use-aliyun-oss-for-ucsc-visualisation/</link><pubDate>Thu, 02 May 2019 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2019-05-02-use-aliyun-oss-for-ucsc-visualisation/</guid><description>&lt;p>You always need to repeat some basic tasks that you did in the past when you relocate to a new place. For some of them, you need to find alternative ways of achieving the same goals. For example, finding a way of visualising &lt;strong>&lt;a href="https://genome.ucsc.edu/goldenpath/help/bigWig.html">bigWig&lt;/a>&lt;/strong> signal files. This is very important for the assessment of the data quality. I hate to say it, but it is often true that the most efficient way of telling whether an experiment works or not is the least scientific way, which is by visual inspection. Looking at bigWig signals is relatively easy in &lt;a href="https://randomstate.net/2018-07-02-setting-up-public-links-for-ucsc-visualisation/">my previous institute&lt;/a>, but it is not so straigtforward for a small lab that does not have good computational support. Things become even more annoying and complicated when your lab is in China mainland for obvious reasons.&lt;/p></description></item><item><title>Set Up Public Links For UCSC Genome Browser Visualisation At The WTSI</title><link>http://localhost:1313/posts/2018-07-02-setting-up-public-links-for-ucsc-visualisation/</link><pubDate>Mon, 02 Jul 2018 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2018-07-02-setting-up-public-links-for-ucsc-visualisation/</guid><description>&lt;p>The best way of visualising sequencing reads pileup/coverage data (very useful for ChIP-seq, DNase-seq &amp;amp; ATAC-seq) is to get the pileup/coverage files in &lt;strong>&lt;a href="https://genome.ucsc.edu/goldenpath/help/bigWig.html">bigWig format&lt;/a>&lt;/strong>, and visualise the signal as custom tracks using &lt;strong>&lt;a href="https://genome.ucsc.edu/goldenpath/help/customTrack.html">UCSC genome browser&lt;/a>&lt;/strong> - the best genome browser, period! The bigWig files are often large, especially when you have high coverage experiments. Therefore, you need a place to host your files, and they need to be in a place where UCSC genome browser can reach.&lt;/p></description></item><item><title>Getting RefSeq gene TSS from UCSC</title><link>http://localhost:1313/posts/2016-11-09-getting-refseq-gene-tss-from-ucsc/</link><pubDate>Wed, 09 Nov 2016 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2016-11-09-getting-refseq-gene-tss-from-ucsc/</guid><description>&lt;p>As a practice of using the unix command lines, let&amp;rsquo;s get the transcription start site (TSS) coordinates of all hg38 RefSeq genes from the UCSC genome browser, and change it to a proper bed format:&lt;/p>
&lt;p>&lt;strong>1. Go to the &lt;a href="http://genome-euro.ucsc.edu/index.html">UCSC genome browser&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>2. Go to the table browser: Tools â€“&amp;gt; Table Browser.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>3. Choose the following options:&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>clade:&lt;/strong> Mammal&lt;br>
&lt;strong>genome:&lt;/strong> Human&lt;br>
&lt;strong>assembly:&lt;/strong> Dec. 2013 (GRCh38/hg38)&lt;br>
&lt;strong>group:&lt;/strong> Genes and Genes Predictions&lt;br>
&lt;strong>track:&lt;/strong> RefSeq Genes&lt;br>
&lt;strong>table:&lt;/strong> refGene&lt;br>
&lt;strong>region:&lt;/strong> genome&lt;br>
&lt;strong>output:&lt;/strong> all fields from selected table&lt;br>
&lt;strong>output file:&lt;/strong> whatever name you want (e.g. refseq_genes_hg38.txt)&lt;/p></description></item></channel></rss>