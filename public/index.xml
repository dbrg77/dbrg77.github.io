<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Not A Rocket Scientist</title><link>http://localhost:1313/</link><description>Recent content on Not A Rocket Scientist</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Thu, 16 Oct 2025 00:07:53 +0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>Add A Photo Grid To The Post</title><link>http://localhost:1313/posts/2025-10-16-photo-grid-testing/</link><pubDate>Thu, 16 Oct 2025 00:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2025-10-16-photo-grid-testing/</guid><description>&lt;p>Recently, I have the idea of adding some photos taken by me at the end of a post. I do not have a professional camera, and I just use my mobile phone. This is just for fun and for the sake of record keeping. The idea I have in mind is to show a 3-by-3 photo grid at the end of the post, because I like a 3-by-3 grid. Everybody likes 3-by-3 grids, right? In Chinese, we call it &amp;ldquo;九宫格&amp;rdquo;.&lt;/p></description></item><item><title>Work Syncing Across Different Operating Systems</title><link>http://localhost:1313/posts/2025-02-08-work-syncing-across-different-oss/</link><pubDate>Sat, 08 Feb 2025 09:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2025-02-08-work-syncing-across-different-oss/</guid><description>&lt;p>I haven&amp;rsquo;t really used &lt;strong>Windows&lt;/strong> since 2012 when I switched from Windows 7 to &lt;strong>Mac OS&lt;/strong>. In recent years, I occasionally found myself in a situation where I had to use Windows for certain admin-related stuff. On top of that, I recently came across &lt;a href="https://www.gog.com/en/">GOG&lt;/a> that prompted me to play some classic PC games from the old days. Therefore, I built a PC and installed Windows 11. The user experience of Windows 11 so far was not really great for me. I&amp;rsquo;m okay with this, because I&amp;rsquo;m still mainly using my Mac computers. Currently, I have an iMac at work, a MacBookPro laptop and a Windows PC at home.&lt;/p></description></item><item><title>A Brief But Comprehensive Book About TikZ and PGFPLOTS</title><link>http://localhost:1313/posts/2024-12-20-a--brief-but-comprehensive-book-about-tikz-and-pgfplots/</link><pubDate>Fri, 20 Dec 2024 09:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2024-12-20-a--brief-but-comprehensive-book-about-tikz-and-pgfplots/</guid><description>&lt;p>Earlier this year, I started a new GitHub repository called &lt;a href="https://github.com/dbrg77/TikZ_and_PGFPLOTS_draw">TikZ_and_PGFPLOTS_draw&lt;/a> where I used &lt;a href="https://tikz.dev/">TikZ&lt;/a> and &lt;a href="https://pgfplots.sourceforge.net">PGFPLOTS&lt;/a> to draw vector graphics for scientific illustrations. Now I&amp;rsquo;m gradually learning and switching to &lt;a href="https://ipe.otfried.org/">Ipe&lt;/a> and &lt;a href="https://inkscape.org">Inkscape&lt;/a> for a more flexible and easier drawing experience. However, TikZ and PGFPLOTS are the two things that I use routinely, so I still want to practice my skills. Therefore, I have kept updating the repo whenever I want to draw some basic stuff.&lt;/p></description></item><item><title>Quarto With Hugo</title><link>http://localhost:1313/posts/2024-09-16-quarto-with-hugo/</link><pubDate>Mon, 16 Sep 2024 09:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2024-09-16-quarto-with-hugo/</guid><description>&lt;p>Very often, I need to write in a &lt;a href="https://ipython.org/notebook.html">Jupyter/IPython Notebook&lt;/a>-like style, where output is immediately shown after a block of code. In the past, I just copy pasted the code block, saved the output plot as image files and displayed them using the &lt;code>![](imagePath)&lt;/code> syntax in markdown or the figure shortcode of &lt;a href="https://gohugo.io">Hugo&lt;/a>. However, it becomes tedious when there are many blocks of code and plots, obviously. I need a better option.&lt;/p></description></item><item><title>Understanding The Chromap Summary File</title><link>http://localhost:1313/posts/2024-07-23-understanding-the-chromap-summary-file/</link><pubDate>Tue, 23 Jul 2024 09:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2024-07-23-understanding-the-chromap-summary-file/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>When talking about scATAC-seq data preprocessing, I guess the first method that most people choose is &lt;a href="https://support.10xgenomics.com/single-cell-atac/software/overview/welcome">&lt;strong>Cell Ranger ATAC&lt;/strong>&lt;/a>. The 10x Genomics Single Cell ATAC kit is probably the most widely used commercial method for doing scATAC-seq, and &lt;strong>Cell Ranger ATAC&lt;/strong> provides a very convenient way of converting the raw sequencing reads to some sort of count matrix for downstream in-depth analyses. The problems with &lt;strong>Cell Ranger ATAC&lt;/strong> are that:&lt;/p></description></item><item><title>PIPseq again - PIPseeker$^{\textmd{TM}}$ Barcode Translation</title><link>http://localhost:1313/posts/2024-06-11-pipseq-again-pipseeker-barcode-translation/</link><pubDate>Tue, 11 Jun 2024 09:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2024-06-11-pipseq-again-pipseeker-barcode-translation/</guid><description>&lt;p>In &lt;a href="http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/">&lt;strong>one of the post&lt;/strong>&lt;/a> where we figured out the library structure of the PIPseq$^{\textmd{TM}}$ V3 chemistry last year, we left a cliffhanger about how the &lt;a href="https://www.fluentbio.com/products/pipseeker-software-for-data-analysis/">PIPseeker$^{\textmd{TM}}$&lt;/a> software from &lt;strong>FluentBio&lt;/strong> performed the barcode &amp;ldquo;translation&amp;rdquo;. During the translation, an original cell barcode that consists of four parts of &amp;ldquo;sub-barcodes&amp;rdquo; (8 bp + 6 bp + 6 bp + 8 bp) got mapped to a 16-bp barcode.&lt;/p>
&lt;h2 id="the-v3-data">The V3 data&lt;/h2>
&lt;p>Using the species mixing data from the V3 chemistry mentioned in &lt;a href="http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/">the previous post&lt;/a>, we would end up with the following files in our working directory if we finished all procedures described in the previous post:&lt;/p></description></item><item><title>ChIP Primer Design</title><link>http://localhost:1313/posts/2024-05-17-chip-primer-design/</link><pubDate>Fri, 17 May 2024 15:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2024-05-17-chip-primer-design/</guid><description>&lt;p>When we study the functions of a gene of interest (&lt;strong>GOI&lt;/strong>), it is common to use a combination of &lt;strong>loss-of-function&lt;/strong> and &lt;strong>gain-of-function&lt;/strong> assays in a study. In the era of genomics, we often use &lt;strong>RNA-seq&lt;/strong> experiments to find out the affected genes when the level of the GOI is reduced, &lt;em>e.g.&lt;/em> siRNA, shRNA &amp;amp; degron, or elevated &lt;em>e.g.&lt;/em> over-expression. If the GOI is a &lt;strong>transcription factor (TF)&lt;/strong>, a special type of proteins that can specifically interact with DNA to regulate transcription, the natural question to ask is whether those affected genes are regulated directly by the TF. When we say &amp;ldquo;directly&amp;rdquo;, we often mean that the TF binds to the &lt;strong>regulatory elements&lt;/strong> of a gene and regulate the transcription of that gene. This is different to the situation where the TF affects the expression of some genes which in turn change the expressions of the genes that we see in the RNA-seq experiments. How do we do that? Again, in the era of genomics, we often use &lt;strong>ChIP-seq&lt;/strong>, which is really good at finding &lt;em>bona fide&lt;/em> genome-wide binding events of a TF in an unbiased manner.&lt;/p></description></item><item><title>Drawing Vector Graphics For Publication Figures</title><link>http://localhost:1313/posts/2024-02-14-drawing-vector-graphics-for-publication-figures/</link><pubDate>Wed, 14 Feb 2024 16:01:00 +0800</pubDate><guid>http://localhost:1313/posts/2024-02-14-drawing-vector-graphics-for-publication-figures/</guid><description>&lt;p>To generate figures for publications, I often use &lt;a href="https://matplotlib.org">&lt;strong>matplotlib&lt;/strong>&lt;/a> and &lt;a href="https://seaborn.pydata.org">&lt;strong>seaborn&lt;/strong>&lt;/a> to prepare plots and save them in PDF format. Then I use &lt;strong>PowerPoint&lt;/strong> to arrange and organise them into a full figure. Like this one shown below:&lt;/p>
&lt;p>&lt;img src="http://localhost:1313/images/2024-02-14/figure_examples.png" alt="">&lt;/p>
&lt;p>Those panels (a - d) were individually generated using &lt;strong>matplotlib&lt;/strong> (except the genome browser track), saved as PDFs and imported into one slide in &lt;strong>PowerPoint&lt;/strong>. The size of the slide can be set to conform to the requirements of the journal, but &lt;strong>A4 size&lt;/strong> generally works in almost all cases. Labels can be added manually in the &lt;strong>PowerPoint&lt;/strong> using a desired font. Once I&amp;rsquo;m satisfied, the whole slide can be exported to a PDF, which serves as a figure. We can do this for every figure. In this way, it is easy and straightforward to generate publication-ready figures and they are still in vector format and all the elements can be edited by other programs like &lt;a href="https://inkscape.org">&lt;strong>Inkscape&lt;/strong>&lt;/a> or &lt;strong>Illustrator&lt;/strong>.&lt;/p></description></item><item><title>How Difficult Is It To Start Your Single-cell Analysis As A Beginner</title><link>http://localhost:1313/posts/2024-01-18-how-difficult-is-it-to-start-your-single-cell-analysis-as-a-beginner/</link><pubDate>Fri, 26 Jan 2024 10:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2024-01-18-how-difficult-is-it-to-start-your-single-cell-analysis-as-a-beginner/</guid><description>&lt;p>The title for this post is &amp;ldquo;&lt;strong>How Difficult Is It To Start Your Single-cell Analysis As A Beginner&lt;/strong>&amp;rdquo;. However, once I finished writing the post, the majority of the content is actually about &amp;ldquo;&lt;strong>Seurat and OSCA Installation On Freshly Installed Ubuntu/Debian/Fedora&lt;/strong>&amp;rdquo;. Oh well &amp;hellip; If you do not have time, just go to the final &lt;a href="#summary">&lt;strong>Summary&lt;/strong>&lt;/a> section to see the final results.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>When I started my NGS analysis during my PhD, which was more than 10 years ago, one of the most difficult things was software installation. In many cases, you needed to do the following three magic steps:&lt;/p></description></item><item><title>The _alt Chromosomes In The Reference Genome</title><link>http://localhost:1313/posts/2024-01-05-the-alt-chromosomes-in-the-reference-genome/</link><pubDate>Fri, 05 Jan 2024 15:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2024-01-05-the-alt-chromosomes-in-the-reference-genome/</guid><description>&lt;p>Early this week, I was re-organising my bookmarks in the browser and I came across &lt;a href="https://lh3.github.io/2017/11/13/which-human-reference-genome-to-use">&lt;strong>this post&lt;/strong>&lt;/a> by Heng Li published more than 6 years ago. It reminded me one of the problem I faced ~10 years ago when I first started using the &lt;code>GRCh38/hg38&lt;/code> version of the human reference genome for RNA-seq analysis. Let&amp;rsquo;s have a look what the problem was.&lt;/p>
&lt;p>Now if we go to the &lt;a href="https://hgdownload.soe.ucsc.edu/downloads.html">UCSC genome browser&lt;/a> to download the reference genome data, we see that there are a couple of options:&lt;/p></description></item><item><title>Need To Write More</title><link>http://localhost:1313/posts/2023-12-31-need-to-write-more/</link><pubDate>Sun, 31 Dec 2023 22:25:53 +0800</pubDate><guid>http://localhost:1313/posts/2023-12-31-need-to-write-more/</guid><description>&lt;p>Ever since I discovered &lt;a href="https://gohugo.io">Hugo&lt;/a>, &lt;a href="https://pages.github.com">GitHub Page&lt;/a> and &lt;a href="https://landchad.net">LandChad&lt;/a>, I always wanted to set up my own web page and write stuff about things I want to understand. This is an important practice for self education. In general, I sort of managed to do it. The current site is hosted on a &lt;a href="https://lightsail.aws.amazon.com">LightSail&lt;/a> server following the instructions from LandChad, and the content is written in &lt;a href="https://en.wikipedia.org/wiki/Markdown">Markdown&lt;/a> and built by Hugo.&lt;/p>
&lt;p>In 2023, I wrote just a little bit more posts than 2022, but I felt it was still not frequent enough. The problem was the combination of finding things that worth writing and finding time to write them. Very often, I spend some decent amount of time on certain things, and I want to write up the whole process. Then I realised that it is either too technical or something people already solved. Eventually, I never really write them up.&lt;/p></description></item><item><title>The -O (--overlap) Option of Cutadapt</title><link>http://localhost:1313/posts/2023-12-10-the-o-option-in-cutadapt/</link><pubDate>Mon, 11 Dec 2023 15:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2023-12-10-the-o-option-in-cutadapt/</guid><description>&lt;p>In recent years, I noticed one problem about the ATAC-seq/scATAC-seq experiments we did in the lab. Specifically, it is related to the ATAC-seq insert size, or fragment length, plotting. The distribution of the fragment length in an ATAC-seq experiment is an important quality control metric. Since the transposase Tn5 can only go to those nucleosome-free regions, the lengths of the fragments after Tn5 transposition often exhibit a nucleosomal ladder pattern, like shown in &lt;a href="http://localhost:1313/posts/2017-02-10-atac-seq-insert-size-plotting/">&lt;strong>this post&lt;/strong>&lt;/a> where I described how to draw the plot by looking at the 9th column of the aligned SAM/BAM file.&lt;/p></description></item><item><title>3D Visualisation of The Residual Sum of Squares</title><link>http://localhost:1313/posts/2023-07-10-3d-visualisation-of-the-residual-sum-of-squares/</link><pubDate>Mon, 10 Jul 2023 16:01:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-07-10-3d-visualisation-of-the-residual-sum-of-squares/</guid><description>&lt;p>I recently came across the video &lt;a href="https://youtu.be/my3lsV-VQjs">The Beauty of Linear Regression (How to Fit a Line to your Data)&lt;/a> by &lt;a href="https://www.youtube.com/@RichBehiel">Richard Behiel&lt;/a>. The video is very inspiring! It illustrates the relationship between the residual sum of squares and the slope and intercept. The visualisation is intuitive and beautiful. I want to do a similar and simpler thing in the lecture slides for a course.&lt;/p>
&lt;p>In the video, the residual sum of squares was shown as a heatmap and the arrows were used to represent the negative gradients. Here I just want to use a Z-axis to represent the residual sum of squares, such that I have:&lt;/p></description></item><item><title>PIPseq$^{\textmd{TM}}$ V4 Update</title><link>http://localhost:1313/posts/2023-07-02-pip-seq-v4-update/</link><pubDate>Sun, 02 Jul 2023 00:30:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-07-02-pip-seq-v4-update/</guid><description>&lt;p>&lt;strong>NOTE:&lt;/strong> this post is just a slightly more detailed version of this &lt;a href="https://twitter.com/XiChenUoM/status/1671400417350017025">Twitter thread&lt;/a>.&lt;/p>
&lt;p>Not very long after I wrote &lt;a href="http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/">the series&lt;/a> about guessing the library layout of PIP-seq, the raw data (FASTQ files) for the V4 chemistry were made available from the &lt;a href="https://www.fluentbio.com/datasets/">FluentBio website&lt;/a>, which is really nice.&lt;/p>
&lt;p>Now let&amp;rsquo;s have a look at what has been changed. The experimental procedures seem to remain the same. What about the library layout and barcodes? Let&amp;rsquo;s use the &lt;strong>T20 Kit V4 Barnyard Study&lt;/strong> data to figure that out. With the experience from the previous versions, we can immediately start with FastQC of Read 1.&lt;/p></description></item><item><title>Guessing Library Structures (4) - PIP-seq V1prototype</title><link>http://localhost:1313/posts/2023-06-07-guessing-library-structures-4/</link><pubDate>Wed, 07 Jun 2023 00:30:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-06-07-guessing-library-structures-4/</guid><description>&lt;div class="admonition note">
 &lt;div class="title">Portal&lt;/div>
 &lt;div class="content">&lt;ul>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/">Guessing Library Structures (1) - Background&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/">Guessing Library Structures (2) - PIPseq$^{\textmd{TM}}$ V3&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-04-guessing-library-structures-3/">Guessing Library Structures (3) - PIP-seq V2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-07-guessing-library-structures-4/">Guessing Library Structures (4) - PIP-seq V1prototype&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>This is the fourth post, also the last, from a series where I use the recent &lt;a href="https://www.nature.com/articles/s41587-023-01685-z">PIP-seq&lt;/a> data as an example to demonstrate the importance to use a common standard like &lt;a href="https://www.biorxiv.org/content/10.1101/2023.03.17.533215v1">&lt;em>seqspec&lt;/em>&lt;/a> to accompany sequencing reads submissions into public repositories.&lt;/p>
&lt;h2 id="the-v1-chemistry">The V1? Chemistry&lt;/h2>
&lt;p>The mysterious samples come from the experiments of looking at the single-cell transcriptional responses of two cancer cell lines (H1975 and PC9) to gefitinibis. I name it &lt;strong>&amp;ldquo;PIP-seq V1prototype&amp;rdquo;&lt;/strong>, which by no means is accurate. Anyway, they are:&lt;/p></description></item><item><title>Guessing Library Structures (3) - PIP-seq V2</title><link>http://localhost:1313/posts/2023-06-04-guessing-library-structures-3/</link><pubDate>Sun, 04 Jun 2023 09:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-06-04-guessing-library-structures-3/</guid><description>&lt;div class="admonition note">
 &lt;div class="title">Portal&lt;/div>
 &lt;div class="content">&lt;ul>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/">Guessing Library Structures (1) - Background&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/">Guessing Library Structures (2) - PIPseq$^{\textmd{TM}}$ V3&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-04-guessing-library-structures-3/">Guessing Library Structures (3) - PIP-seq V2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-07-guessing-library-structures-4/">Guessing Library Structures (4) - PIP-seq V1prototype&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>This is the third post from a series where I use the recent &lt;a href="https://www.nature.com/articles/s41587-023-01685-z">PIP-seq&lt;/a> data as an example to demonstrate the importance to use a common standard like &lt;a href="https://www.biorxiv.org/content/10.1101/2023.03.17.533215v1">&lt;em>seqspec&lt;/em>&lt;/a> to accompany sequencing reads submissions into public repositories.&lt;/p>
&lt;h2 id="some-notes">Some Notes&lt;/h2>
&lt;p>In the previous post, we have figured out the library structure of many samples from the &lt;strong>Clark2023&lt;/strong> paper. They are using the commerical &lt;strong>FluentBio&lt;/strong> kits, so they basically have the &lt;a href="https://teichlab.github.io/scg_lib_structs/methods_html/PIP-seq.html">PIPseq$^{\textmd{TM}}$ V3 library structure&lt;/a>. However, we still haven&amp;rsquo;t figure out what is going on with samples like &lt;code>SRR19086119&lt;/code>. We will tackle this in the next post.&lt;/p></description></item><item><title>Guessing Library Structures (2) - PIPseq$^{\textmd{TM}}$ V3</title><link>http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/</link><pubDate>Sat, 03 Jun 2023 09:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/</guid><description>&lt;div class="admonition note">
 &lt;div class="title">Portal&lt;/div>
 &lt;div class="content">&lt;ul>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/">Guessing Library Structures (1) - Background&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/">Guessing Library Structures (2) - PIPseq$^{\textmd{TM}}$ V3&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-04-guessing-library-structures-3/">Guessing Library Structures (3) - PIP-seq V2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-07-guessing-library-structures-4/">Guessing Library Structures (4) - PIP-seq V1prototype&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>This is the second post from a series where I use the recent &lt;a href="https://www.nature.com/articles/s41587-023-01685-z">PIP-seq&lt;/a> data as an example to demonstrate the importance to use a common standard like &lt;a href="https://www.biorxiv.org/content/10.1101/2023.03.17.533215v1">&lt;em>seqspec&lt;/em>&lt;/a> to accompany sequencing reads submissions into public repositories.&lt;/p>
&lt;h2 id="an-initial-look">An Initial Look&lt;/h2>
&lt;p>The PIP-seq method was originally put on &lt;a href="https://www.biorxiv.org/content/10.1101/2022.06.10.495582v1">&lt;strong>bioRxiv&lt;/strong>&lt;/a> on 13 June 2022. It means the method was under development way ahead of that date. The final publication in &lt;a href="https://www.nature.com/articles/s41587-023-01685-z">Nature Biotechnology&lt;/a> (Clark2023) is on 06 March 2023. If we consider the time between the start of the method development and the final publication, it is not surprising to see different versions of the method in the paper. This is indeed the case which we will demonstrate.&lt;/p></description></item><item><title>Guessing Library Structures (1) - Background</title><link>http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/</link><pubDate>Sun, 28 May 2023 14:46:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/</guid><description>&lt;div class="admonition note">
 &lt;div class="title">Portal&lt;/div>
 &lt;div class="content">&lt;ul>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-05-28-guessing-library-structures-1/">Guessing Library Structures (1) - Background&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-03-guessing-library-structures-2/">Guessing Library Structures (2) - PIPseq$^{\textmd{TM}}$ V3&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-04-guessing-library-structures-3/">Guessing Library Structures (3) - PIP-seq V2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://localhost:1313/posts/2023-06-07-guessing-library-structures-4/">Guessing Library Structures (4) - PIP-seq V1prototype&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;p>This is the first post from a series where I use the recent &lt;a href="https://www.nature.com/articles/s41587-023-01685-z">PIP-seq&lt;/a> data as an example to demonstrate the importance to use a common standard like &lt;a href="https://www.biorxiv.org/content/10.1101/2023.03.17.533215v1">&lt;em>seqspec&lt;/em>&lt;/a> to accompany sequencing reads submissions into public repositories.&lt;/p>
&lt;h2 id="whats-the-problem">What&amp;rsquo;s The Problem?&lt;/h2>
&lt;p>There are many interesting questions we can ask, but to what extent can we investigate and do research on them? This is heavily dependent on the methods we have. We believe methods matter!&lt;/p></description></item><item><title>How Did Gauss Derive The Normal Distribution</title><link>http://localhost:1313/posts/2023-01-27-how-gauss-derived-the-normal-distribution/</link><pubDate>Fri, 27 Jan 2023 00:10:00 +0800</pubDate><guid>http://localhost:1313/posts/2023-01-27-how-gauss-derived-the-normal-distribution/</guid><description>&lt;p>I first came across with the normal distribution when I was 17 years old in high school. The &lt;strong>probability density function (PDF)&lt;/strong> is&lt;/p>
&lt;p>$$f_{\boldsymbol{X}}(x) = \cfrac{1}{\sqrt{2\pi}\sigma}\,e^{-\frac{(x-\mu)^2}{2\sigma^2}}$$&lt;/p>
&lt;p>where $\mu$ and $\sigma$ are the population &lt;strong>mean&lt;/strong> and &lt;strong>standard deviation&lt;/strong>, respectively.&lt;/p>
&lt;p>Like most people when they first came across this function, the derivation of the function was not really introduced. Soon after that, we started to use it to calculate probabilities and other things. However, where does it come from? What&amp;rsquo;s the intuition of the function? Why are two of the most important constants $\pi$ and $e$ there? Those questions lingered in my brain ever since.&lt;/p></description></item><item><title>Using Zotero With iCloud As The Storage</title><link>http://localhost:1313/posts/2022-10-04-using-zotero-with-icloud-as-the-storage/</link><pubDate>Tue, 04 Oct 2022 15:07:53 +0800</pubDate><guid>http://localhost:1313/posts/2022-10-04-using-zotero-with-icloud-as-the-storage/</guid><description>&lt;p>I used to use &lt;a href="https://paperpile.com">&lt;strong>Paperpile&lt;/strong>&lt;/a> and &lt;a href="https://docs.google.com">&lt;strong>Google Doc&lt;/strong>&lt;/a> for writing scientific papers and managing the literature PDFs. The process was very smooth. I did not really have the habit of saving PDFs locally, because I did not need to. In 2019, I relocated to my current place, and accessing Google Doc has been a pain ever since. Even if I managed to use Google Doc, the speed was pathetic and the connection was intermittent. The internet situation at my current university is pretty bad. To show you an example:&lt;/p></description></item><item><title>Single Cell Data Preprocessing</title><link>http://localhost:1313/posts/2022-09-06-single-cell-data-preprocessing/</link><pubDate>Tue, 06 Sep 2022 22:35:53 +0800</pubDate><guid>http://localhost:1313/posts/2022-09-06-single-cell-data-preprocessing/</guid><description>&lt;p>When I started my PhD back in 2009, the next generation sequencing (NGS) technologies had already been out there for a while. They were in the process of being adapted by many labs. My impression back then was that it was difficult to learn how exactly those methods worked. There were many reasons for that, and one of them was the need of the commercial kits for the library preparation. As a beginner, you kind of knew roughly what the kit was doing: end repair, A tailing, ligate the adapters to the fragments &lt;em>etc&lt;/em>. However, there were many missing details due to the black box nature of the kit. For example, what enzymes are used in each step? What are the oligo sequences? Are there any modifications on the oligos? Those things are critical to understand the method.&lt;/p></description></item><item><title>Getting Index Reads From SRA</title><link>http://localhost:1313/posts/2022-07-26-getting-index-reads-from-sra/</link><pubDate>Tue, 26 Jul 2022 10:07:27 +0800</pubDate><guid>http://localhost:1313/posts/2022-07-26-getting-index-reads-from-sra/</guid><description>&lt;p>A few month ago, I ranted about the &lt;a href="http://localhost:1313/posts/2022-02-27-about-fastq-files-submission/">&lt;strong>FastQ files submission&lt;/strong>&lt;/a> for data produced by complex genomic protocols. The main reason of the rant is that we tried to get some single cell data from &lt;a href="https://www.ncbi.nlm.nih.gov/sra">&lt;strong>SRA&lt;/strong>&lt;/a>, and we really needed the cell barcodes for the data preprocessing and analysis. However, the cell barcodes are stored in the indexing reads where it &lt;em>seems&lt;/em> impossible to get from the &lt;code>.sra&lt;/code> file. Recently, I finally found a way of getting those information &amp;hellip; well &amp;hellip; at least for some studies. Here, I&amp;rsquo;m just documenting what happened.&lt;/p></description></item><item><title>Matplotlib With The Beamer Metropolis Style</title><link>http://localhost:1313/posts/2022-03-02-matplotlib-with-the--beamer-metropolis-style/</link><pubDate>Wed, 02 Mar 2022 10:49:27 +0800</pubDate><guid>http://localhost:1313/posts/2022-03-02-matplotlib-with-the--beamer-metropolis-style/</guid><description>&lt;p>Ever since I came across the &lt;a href="https://github.com/matze/mtheme">metropolis&lt;/a> theme of &lt;a href="https://ctan.org/pkg/beamer">Beamer&lt;/a> two years ago, I always used that theme to prepare presentation and lecture slides whenever possible. I really like the design. The style is hard to resist. One problem with it or with beamer in general is that plotting is difficult and limited. I know that &lt;a href="https://ctan.org/pkg/pgfplots">pgfplots&lt;/a> is very powerful, and you can do some pretty &lt;a href="https://texample.net/tikz/examples/all/">complicated plots&lt;/a> with it. I used it for routine basic plotting in Beamer, such as the box/scatter plot, the bar chart, the histogram. However, I&amp;rsquo;m not very proficient at it. For some plots with really large data files, it is better just use &lt;a href="https://matplotlib.org">matplotlib&lt;/a>. However, when I do that, I have another problem shown below:&lt;/p></description></item><item><title>About FastQ Files Submission</title><link>http://localhost:1313/posts/2022-02-27-about-fastq-files-submission/</link><pubDate>Sun, 27 Feb 2022 10:07:27 +0800</pubDate><guid>http://localhost:1313/posts/2022-02-27-about-fastq-files-submission/</guid><description>&lt;p>This post collects my thoughts about &lt;code>fastq&lt;/code> files accumlated over the years, specifically focusing on what should be included during a submission. It is not about the format of fastq files. If you are not sure about the format, you can check the &lt;a href="https://en.wikipedia.org/wiki/FASTQ_format">Wikipedia page&lt;/a> and this excellent paper by &lt;strong>&lt;a href="https://doi.org/10.1093/nar/gkp1137">Cock &lt;em>et al.&lt;/em>&lt;/a>&lt;/strong> that contains very deteiled information and the history about the fastq file.&lt;/p>
&lt;p>Let&amp;rsquo;s first look at what you will get from a typical Illumina sequencing experiment. The library fragments you get is like this:&lt;/p></description></item><item><title>Hello, Hugo!</title><link>http://localhost:1313/posts/2022-02-24-hello-hugo/</link><pubDate>Wed, 23 Feb 2022 23:39:49 +0800</pubDate><guid>http://localhost:1313/posts/2022-02-24-hello-hugo/</guid><description>&lt;p>Well, the idea of using &lt;strong>&lt;a href="https://www.markdowntutorial.com/">Markdown&lt;/a>&lt;/strong> to write blog posts is hard to resist, and &lt;strong>&lt;a href="https://gohugo.io">Hugo&lt;/a>&lt;/strong> + &lt;strong>&lt;a href="https://pages.github.com/">Github Pages&lt;/a>&lt;/strong> are awesome!&lt;/p>
&lt;p>The theme of this site is called &lt;strong>&lt;a href="https://github.com/526avijitgupta/gokarna">Gokarna&lt;/a>&lt;/strong> by &lt;a href="https://www.buymeacoffee.com/avijitgupta">Avijit Gupta&lt;/a>.&lt;/p></description></item><item><title>ATAC-seq Peak Calling With MACS2</title><link>http://localhost:1313/posts/2020-12-09-atac-seq-peak-calling-with-macs2/</link><pubDate>Wed, 09 Dec 2020 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2020-12-09-atac-seq-peak-calling-with-macs2/</guid><description>&lt;p>Although &lt;strong>&lt;a href="http://www.nature.com/nmeth/journal/v10/n12/full/nmeth.2688.html">ATAC-seq&lt;/a>&lt;/strong> has been extensively used in the functional genomics field to study chromatin accessibility, it is still under debate how we should perform peak calling to identify oepn chromatin regions. &lt;a href="https://github.com/macs3-project/MACS">MACS2&lt;/a> is a very popular peak caller for ChIP-seq, and it has been used for ATAC-seq as well. How should we perform ATAC-seq peak calling using MACS2? That is a recurring question. If you pay attention to the details in those publications that uses ATAC-seq, you might notice that some people uses the &lt;code>--shift -100 --extsize 200&lt;/code> flags during MACS2 peak calling.&lt;/p></description></item><item><title>Benford's Law and RNA-seq</title><link>http://localhost:1313/posts/2020-02-27-benfords-law-and-rna-seq/</link><pubDate>Thu, 27 Feb 2020 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2020-02-27-benfords-law-and-rna-seq/</guid><description>&lt;p>More than two years ago, I started to watch videos from the YouTube channel &lt;strong>&lt;a href="https://www.youtube.com/user/numberphile/">Numberphile&lt;/a>&lt;/strong>. I came across &lt;strong>&lt;a href="https://en.wikipedia.org/wiki/Benford%27s_law">Benford&amp;rsquo;s Law&lt;/a>&lt;/strong>, and I was amazed when I saw it on &lt;strong>&lt;a href="https://www.youtube.com/watch?v=XXjlR2OK1kM">this video&lt;/a>&lt;/strong>. Basically, Benford&amp;rsquo;s Law is an observation about the relative frequency distribution of the first digits from real-world data sets, where the data span multiple orders of magnitude. Intuitively, we expect them to be uniformly distributed so that each digit (from 1 to 9) has a relative frequency around 1/9. However, it turns out that 1 is the most frequent digit, and 2 is the 2nd most frequent digit, and so on. Since people who fabricate data tend to make the distribution uniform, Benford&amp;rsquo;s Law can be used for fraud detection. After watching the Numberphile video, I immediately realised that RNA-seq data should follow Benford&amp;rsquo;s Law as well. In an RNA-seq sample, you always have lowly expressed genes and highly expressed genes, and their expression values span several orders of magnitude. Indeed, there are papers about using Benford&amp;rsquo;s Law to characterise patterns of gene expressions, such as &lt;strong>&lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4979126/">this one&lt;/a>&lt;/strong> and &lt;strong>&lt;a href="https://www.mdpi.com/2073-4409/8/9/1004">this one&lt;/a>&lt;/strong>.&lt;/p></description></item><item><title>Use Aliyun OSS For UCSC Visualisation In China Mainland</title><link>http://localhost:1313/posts/2019-05-02-use-aliyun-oss-for-ucsc-visualisation/</link><pubDate>Thu, 02 May 2019 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2019-05-02-use-aliyun-oss-for-ucsc-visualisation/</guid><description>&lt;p>You always need to repeat some basic tasks that you did in the past when you relocate to a new place. For some of them, you need to find alternative ways of achieving the same goals. For example, finding a way of visualising &lt;strong>&lt;a href="https://genome.ucsc.edu/goldenpath/help/bigWig.html">bigWig&lt;/a>&lt;/strong> signal files. This is very important for the assessment of the data quality. I hate to say it, but it is often true that the most efficient way of telling whether an experiment works or not is the least scientific way, which is by visual inspection. Looking at bigWig signals is relatively easy in &lt;a href="https://randomstate.net/2018-07-02-setting-up-public-links-for-ucsc-visualisation/">my previous institute&lt;/a>, but it is not so straigtforward for a small lab that does not have good computational support. Things become even more annoying and complicated when your lab is in China mainland for obvious reasons.&lt;/p></description></item><item><title>Why do I like CUT&amp;RUN more than ChIP-seq</title><link>http://localhost:1313/posts/2018-10-23-why-do-i-like-cut-and-run-more-than-chip-seq/</link><pubDate>Tue, 23 Oct 2018 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2018-10-23-why-do-i-like-cut-and-run-more-than-chip-seq/</guid><description>&lt;p>Chromatin immunoprecipitation (ChIP) is one of the gold standards to study protein-DNA interaction &lt;em>in vivo&lt;/em>. In 1984, John Lis&amp;rsquo; lab at Cornell invented the first ChIP method using UV to crosslink protein to DNA, and they used this approach to study the interaction of the RNA polymerase with specific genes (&lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC345570/">&lt;strong>Gilmour and Lis&lt;/strong>, &lt;strong>1984&lt;/strong>&lt;/a>). However, UV crosslinking causes DNA damage that makes cerntain downstream analysis, such as PCR, very difficult. Most people often choose to use another approach developed by Alexander Varshavsky&amp;rsquo;s lab later in 1988 at MIT, where they used formaldehyde for the crosslinking to study the histone-DNA interaction around the &lt;em>hsp70&lt;/em> gene (&lt;a href="https://www.sciencedirect.com/science/article/pii/S0092867488904692">&lt;strong>Solomon&lt;/strong> &lt;em>&lt;strong>et al.&lt;/strong>&lt;/em>, &lt;strong>1988&lt;/strong>&lt;/a>). Ever since then, the ChIP protocols have been optimised and developed extensively, with a lot of method variations invented along the way.&lt;/p></description></item><item><title>Project scg_lib_structs</title><link>http://localhost:1313/posts/2018-07-13-project-scg-lib-structs/</link><pubDate>Fri, 13 Jul 2018 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2018-07-13-project-scg-lib-structs/</guid><description>&lt;p>Being able to perform genomic studies on the material obtained from single cells is just awesome. In 2009, &lt;a href="https://www.nature.com/articles/nmeth.1315">&lt;strong>Tang&lt;/strong> &lt;em>&lt;strong>et al&lt;/strong>&lt;/em>.&lt;/a> presented the first study of mRNA-seq from single cells (scRNA-seq). Two years later, &lt;a href="https://www.nature.com/articles/nature09807">&lt;strong>Navin&lt;/strong> &lt;em>&lt;strong>et al&lt;/strong>&lt;/em>.&lt;/a> successfully sequenced the genome of single cells. Ever since then, the field of single cell genomics is rapidly evolving and has proved to be powerful in many aspects of biology.&lt;/p>
&lt;p>Many methods (mainly for scRNA-seq) are invented along the way, which is a good thing. However, I&amp;rsquo;m a bit bombarded and lost in those methods. Many of them are full of technical jargons and it is not straightforward to figure out how they actually work and what the differences are among those methods. To help understand how a method works, people tend to present some schematic views of how the sequencing library is generated using their method. For example, this is a very nice summary of 8 different scRNA-seq methods taken from a recent review by &lt;a href="https://academic.oup.com/bfg/advance-article/doi/10.1093/bfgp/ely009/4951519">&lt;strong>Ziegenhain&lt;/strong> &lt;em>&lt;strong>et al&lt;/strong>&lt;/em>.&lt;/a>:&lt;/p></description></item><item><title>Set Up Public Links For UCSC Genome Browser Visualisation At The WTSI</title><link>http://localhost:1313/posts/2018-07-02-setting-up-public-links-for-ucsc-visualisation/</link><pubDate>Mon, 02 Jul 2018 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2018-07-02-setting-up-public-links-for-ucsc-visualisation/</guid><description>&lt;p>The best way of visualising sequencing reads pileup/coverage data (very useful for ChIP-seq, DNase-seq &amp;amp; ATAC-seq) is to get the pileup/coverage files in &lt;strong>&lt;a href="https://genome.ucsc.edu/goldenpath/help/bigWig.html">bigWig format&lt;/a>&lt;/strong>, and visualise the signal as custom tracks using &lt;strong>&lt;a href="https://genome.ucsc.edu/goldenpath/help/customTrack.html">UCSC genome browser&lt;/a>&lt;/strong> - the best genome browser, period! The bigWig files are often large, especially when you have high coverage experiments. Therefore, you need a place to host your files, and they need to be in a place where UCSC genome browser can reach.&lt;/p></description></item><item><title>ATAC-seq Insert Size Plotting</title><link>http://localhost:1313/posts/2017-02-10-atac-seq-insert-size-plotting/</link><pubDate>Fri, 10 Feb 2017 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2017-02-10-atac-seq-insert-size-plotting/</guid><description>&lt;p>ATAC-seq is THE simplest genomic protocol to profile open chromatin regions in the genome. The original publication (&lt;strong>&lt;a href="http://www.nature.com/nmeth/journal/v10/n12/full/nmeth.2688.html">Nature Methods 10, 1213-1218&lt;/a>&lt;/strong>) has been cited 441 times at this moment of writing (1,073 times at this moment of re-posting). It has become almost a routine for a lab that is interested in transcriptional regulation.&lt;/p>
&lt;p>One common QC for the data is to plot the fragment size density of your libraries. The successful construction of a ATAC library requires a proper pair of Tn5 transposase cutting events at the ends of DNA. In the nucleosome-free open chromatin regions, many molecules of Tn5 can kick in and chop the DNA into small pieces; around nucleosome-occupied regions, Tn5 can only access the linker regions. Therefore, in a normal ATAC-seq library, you should expect to see a sharp peak at the &amp;lt;100 bp region (open chromatin), and a peak at ~200bp region (mono-nucleosome), and other larger peaks (multi-nucleosomes). Examples from one of my data:&lt;/p></description></item><item><title>Running classic Windows game on modern MAC OS using wine</title><link>http://localhost:1313/posts/2016-11-17-running-classic-windows-game-on-modern-mac-os-using-wine/</link><pubDate>Thu, 17 Nov 2016 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2016-11-17-running-classic-windows-game-on-modern-mac-os-using-wine/</guid><description>&lt;p>It is relatively straightforward. All you need is &lt;strong>&lt;a href="https://www.winehq.org/">wine&lt;/a>&lt;/strong>, which is a free open source software that allows you to run Windows applications (*.exe files) on unix systems (Linux, Mac OSX etc).&lt;/p>
&lt;p>In this post, I’m going to use the classic game Diablo II as an example. The latest patch of Diablo II is 1.14d, which can function on modern Mac OS. However, the experience is very awful. The most annoying thing to me is that the mouse cursor freezes for ~0.5 seconds whenever you open your character screen or quest log screen.&lt;/p></description></item><item><title>Getting RefSeq gene TSS from UCSC</title><link>http://localhost:1313/posts/2016-11-09-getting-refseq-gene-tss-from-ucsc/</link><pubDate>Wed, 09 Nov 2016 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2016-11-09-getting-refseq-gene-tss-from-ucsc/</guid><description>&lt;p>As a practice of using the unix command lines, let&amp;rsquo;s get the transcription start site (TSS) coordinates of all hg38 RefSeq genes from the UCSC genome browser, and change it to a proper bed format:&lt;/p>
&lt;p>&lt;strong>1. Go to the &lt;a href="http://genome-euro.ucsc.edu/index.html">UCSC genome browser&lt;/a>.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>2. Go to the table browser: Tools –&amp;gt; Table Browser.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>3. Choose the following options:&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>clade:&lt;/strong> Mammal&lt;br>
&lt;strong>genome:&lt;/strong> Human&lt;br>
&lt;strong>assembly:&lt;/strong> Dec. 2013 (GRCh38/hg38)&lt;br>
&lt;strong>group:&lt;/strong> Genes and Genes Predictions&lt;br>
&lt;strong>track:&lt;/strong> RefSeq Genes&lt;br>
&lt;strong>table:&lt;/strong> refGene&lt;br>
&lt;strong>region:&lt;/strong> genome&lt;br>
&lt;strong>output:&lt;/strong> all fields from selected table&lt;br>
&lt;strong>output file:&lt;/strong> whatever name you want (e.g. refseq_genes_hg38.txt)&lt;/p></description></item><item><title>Common Bioinformatics Tasks With UNIX Commands</title><link>http://localhost:1313/posts/2016-10-20-common-bioinformatics-tasks-with-unix-commands/</link><pubDate>Thu, 20 Oct 2016 00:00:00 +0800</pubDate><guid>http://localhost:1313/posts/2016-10-20-common-bioinformatics-tasks-with-unix-commands/</guid><description>&lt;h3 id="awk">awk&lt;/h3>
&lt;p>&lt;strong>1. Give names to each peak in a 3-column bed file:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cat Oct4_union_peaks.bed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3062833&lt;/span> &lt;span style="color:#d19a66">3063056&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3343519&lt;/span> &lt;span style="color:#d19a66">3343843&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3482630&lt;/span> &lt;span style="color:#d19a66">3483324&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3549654&lt;/span> &lt;span style="color:#d19a66">3549895&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3648929&lt;/span> &lt;span style="color:#d19a66">3649295&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ awk &lt;span style="color:#98c379">&amp;#39;BEGIN{OFS=&amp;#34;\t&amp;#34;}{print $1,$2,$3,&amp;#34;Oct4_union_peak_&amp;#34; NR}&amp;#39;&lt;/span> Oct4_union_peaks.bed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3062833&lt;/span> &lt;span style="color:#d19a66">3063056&lt;/span> Oct4_union_peak_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3343519&lt;/span> &lt;span style="color:#d19a66">3343843&lt;/span> Oct4_union_peak_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3482630&lt;/span> &lt;span style="color:#d19a66">3483324&lt;/span> Oct4_union_peak_3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3549654&lt;/span> &lt;span style="color:#d19a66">3549895&lt;/span> Oct4_union_peak_4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chr1 &lt;span style="color:#d19a66">3648929&lt;/span> &lt;span style="color:#d19a66">3649295&lt;/span> Oct4_union_peak_5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2. Print the number of fileds for each line:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>awk &lt;span style="color:#98c379">&amp;#39;{print NF}&amp;#39;&lt;/span> some_file.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>3. Print the last column of a text file:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>awk &lt;span style="color:#98c379">&amp;#39;{print $NF}&amp;#39;&lt;/span> some_file.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>4. In a &lt;a href="https://genome.ucsc.edu/FAQ/FAQformat#format12">narrowPeak format&lt;/a> file, Get all peaks that have more than 5 fold enrichment:&lt;/strong>&lt;/p></description></item><item><title>Latex And Beamer Snippets</title><link>http://localhost:1313/projects/learning-latex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:1313/projects/learning-latex/</guid><description>&lt;p>In 2012, when I was at the final stage of my PhD to write a thesis, I put &amp;ldquo;learning LaTeX&amp;rdquo; on my to-do list. Early 2021, I finally remove the item from the list. I read the &lt;a href="https://www.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes">Learn LaTeX in 30 minutes&lt;/a> article from &lt;a href="https://www.overleaf.com">Overleaf&lt;/a>, and then immediately started using it. When I encountered some problems along the way, I just Google them. This way of learning is not very systematic, but it does the job.&lt;/p></description></item></channel></rss>