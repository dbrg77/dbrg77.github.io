<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Not A Rocket Scientist</title>
    <link>https://dbrg77.github.io/</link>
    <description>Recent content on Not A Rocket Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 04 Oct 2022 15:07:53 +0800</lastBuildDate><atom:link href="https://dbrg77.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Zotero With iCloud As The Storage</title>
      <link>https://dbrg77.github.io/posts/2022-10-04-using-zotero-with-icloud-as-the-storage/</link>
      <pubDate>Tue, 04 Oct 2022 15:07:53 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2022-10-04-using-zotero-with-icloud-as-the-storage/</guid>
      <description>I used to use Paperpile and Google Doc for writing scientific papers and managing the literature PDFs. The process was very smooth. I did not really have the habit of saving PDFs locally, because I did not need to. In 2019, I relocated to my current place, and accessing Google Doc has been a pain ever since. Even if I managed to use Google Doc, the speed was pathetic and the connection was intermittent.</description>
    </item>
    
    <item>
      <title>Single Cell Data Preprocessing</title>
      <link>https://dbrg77.github.io/posts/2022-09-06-single-cell-data-preprocessing/</link>
      <pubDate>Tue, 06 Sep 2022 22:35:53 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2022-09-06-single-cell-data-preprocessing/</guid>
      <description>When I started my PhD back in 2009, the next generation sequencing (NGS) technologies had already been out there for a while. They were in the process of being adapted by many labs. My impression back then was that it was difficult to learn how exactly those methods worked. There were many reasons for that, and one of them was the need of the commercial kits for the library preparation. As a beginner, you kind of knew roughly what the kit was doing: end repair, A tailing, ligate the adapters to the fragments etc.</description>
    </item>
    
    <item>
      <title>Getting Index Reads From SRA</title>
      <link>https://dbrg77.github.io/posts/2022-07-26-getting-index-reads-from-sra/</link>
      <pubDate>Tue, 26 Jul 2022 10:07:27 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2022-07-26-getting-index-reads-from-sra/</guid>
      <description>A few month ago, I ranted about the FastQ files submission for data produced by complex genomic protocols. The main reason of the rant is that we tried to get some single cell data from SRA, and we really needed the cell barcodes for the data preprocessing and analysis. However, the cell barcodes are stored in the indexing reads where it seems impossible to get from the .sra file. Recently, I finally found a way of getting those information &amp;hellip; well &amp;hellip; at least for some studies.</description>
    </item>
    
    <item>
      <title>Matplotlib With The Beamer Metropolis Style</title>
      <link>https://dbrg77.github.io/posts/2022-03-02-matplotlib-with-the--beamer-metropolis-style/</link>
      <pubDate>Wed, 02 Mar 2022 10:49:27 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2022-03-02-matplotlib-with-the--beamer-metropolis-style/</guid>
      <description>Ever since I came across the metropolis theme of Beamer two years ago, I always used that theme to prepare presentation and lecture slides whenever possible. I really like the design. The style is hard to resist. One problem with it or with beamer in general is that plotting is difficult and limited. I know that pgfplots is very powerful, and you can do some pretty complicated plots with it. I used it for routine basic plotting in Beamer, such as the box/scatter plot, the bar chart, the histogram.</description>
    </item>
    
    <item>
      <title>About FastQ Files Submission</title>
      <link>https://dbrg77.github.io/posts/2022-02-27-about-fastq-files-submission/</link>
      <pubDate>Sun, 27 Feb 2022 10:07:27 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2022-02-27-about-fastq-files-submission/</guid>
      <description>This post collects my thoughts about fastq files accumlated over the years, specifically focusing on what should be included during a submission. It is not about the format of fastq files. If you are not sure about the format, you can check the Wikipedia page and this excellent paper by Cock et al. that contains very deteiled information and the history about the fastq file.
Let&amp;rsquo;s first look at what you will get from a typical Illumina sequencing experiment.</description>
    </item>
    
    <item>
      <title>Hello, Hugo!</title>
      <link>https://dbrg77.github.io/posts/2022-02-24-hello-hugo/</link>
      <pubDate>Wed, 23 Feb 2022 23:39:49 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2022-02-24-hello-hugo/</guid>
      <description>Well, the idea of using Markdown to write blog posts is hard to resist, and Hugo + Github Pages are awesome!
The theme of this site is called Gokarna by Avijit Gupta.</description>
    </item>
    
    <item>
      <title>ATAC-seq Peak Calling With MACS2</title>
      <link>https://dbrg77.github.io/posts/2020-12-09-atac-seq-peak-calling-with-macs2/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2020-12-09-atac-seq-peak-calling-with-macs2/</guid>
      <description>Although ATAC-seq has been extensively used in the functional genomics field to study chromatin accessibility, it is still under debate how we should perform peak calling to identify oepn chromatin regions. MACS2 is a very popular peak caller for ChIP-seq, and it has been used for ATAC-seq as well. How should we perform ATAC-seq peak calling using MACS2? That is a recurring question. If you pay attention to the details in those publications that uses ATAC-seq, you might notice that some people uses the --shift -100 --extsize 200 flags during MACS2 peak calling.</description>
    </item>
    
    <item>
      <title>Benford&#39;s Law and RNA-seq</title>
      <link>https://dbrg77.github.io/posts/2020-02-27-benfords-law-and-rna-seq/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2020-02-27-benfords-law-and-rna-seq/</guid>
      <description>More than two years ago, I started to watch videos from the YouTube channel Numberphile. I came across Benford&amp;rsquo;s Law, and I was amazed when I saw it on this video. Basically, Benford&amp;rsquo;s Law is an observation about the relative frequency distribution of the first digits from real-world data sets, where the data span multiple orders of magnitude. Intuitively, we expect them to be uniformly distributed so that each digit (from 1 to 9) has a relative frequency around 1/9.</description>
    </item>
    
    <item>
      <title>Use Aliyun OSS For UCSC Visualisation In China Mainland</title>
      <link>https://dbrg77.github.io/posts/2019-05-02-use-aliyun-oss-for-ucsc-visualisation/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2019-05-02-use-aliyun-oss-for-ucsc-visualisation/</guid>
      <description>You always need to repeat some basic tasks that you did in the past when you relocate to a new place. For some of them, you need to find alternative ways of achieving the same goals. For example, finding a way of visualising bigWig signal files. This is very important for the assessment of the data quality. I hate to say it, but it is often true that the most efficient way of telling whether an experiment works or not is the least scientific way, which is by visual inspection.</description>
    </item>
    
    <item>
      <title>Why do I like CUT&amp;RUN more than ChIP-seq</title>
      <link>https://dbrg77.github.io/posts/2018-10-23-why-do-i-like-cut-and-run-more-than-chip-seq/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2018-10-23-why-do-i-like-cut-and-run-more-than-chip-seq/</guid>
      <description>Chromatin immunoprecipitation (ChIP) is one of the gold standards to study protein-DNA interaction in vivo. In 1984, John Lis&amp;rsquo; lab at Cornell invented the first ChIP method using UV to crosslink protein to DNA, and they used this approach to study the interaction of the RNA polymerase with specific genes (Gilmour and Lis, 1984). However, UV crosslinking causes DNA damage that makes cerntain downstream analysis, such as PCR, very difficult. Most people often choose to use another approach developed by Alexander Varshavsky&amp;rsquo;s lab later in 1988 at MIT, where they used formaldehyde for the crosslinking to study the histone-DNA interaction around the hsp70 gene (Solomon et al.</description>
    </item>
    
    <item>
      <title>Project scg_lib_structs</title>
      <link>https://dbrg77.github.io/posts/2018-07-13-project-scg-lib-structs/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2018-07-13-project-scg-lib-structs/</guid>
      <description>Being able to perform genomic studies on the material obtained from single cells is just awesome. In 2009, Tang et al. presented the first study of mRNA-seq from single cells (scRNA-seq). Two years later, Navin et al. successfully sequenced the genome of single cells. Ever since then, the field of single cell genomics is rapidly evolving and has proved to be powerful in many aspects of biology.
Many methods (mainly for scRNA-seq) are invented along the way, which is a good thing.</description>
    </item>
    
    <item>
      <title>Set Up Public Links For UCSC Genome Browser Visualisation At The WTSI</title>
      <link>https://dbrg77.github.io/posts/2018-07-02-setting-up-public-links-for-ucsc-visualisation/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2018-07-02-setting-up-public-links-for-ucsc-visualisation/</guid>
      <description>The best way of visualising sequencing reads pileup/coverage data (very useful for ChIP-seq, DNase-seq &amp;amp; ATAC-seq) is to get the pileup/coverage files in bigWig format, and visualise the signal as custom tracks using UCSC genome browser - the best genome browser, period! The bigWig files are often large, especially when you have high coverage experiments. Therefore, you need a place to host your files, and they need to be in a place where UCSC genome browser can reach.</description>
    </item>
    
    <item>
      <title>ATAC-seq Insert Size Plotting</title>
      <link>https://dbrg77.github.io/posts/2017-02-10-atac-seq-insert-size-plotting/</link>
      <pubDate>Fri, 10 Feb 2017 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2017-02-10-atac-seq-insert-size-plotting/</guid>
      <description>ATAC-seq is THE simplest genomic protocol to profile open chromatin regions in the genome. The original publication (Nature Methods 10, 1213-1218) has been cited 441 times at this moment of writing (1,073 times at this moment of re-posting). It has become almost a routine for a lab that is interested in transcriptional regulation.
One common QC for the data is to plot the fragment size density of your libraries. The successful construction of a ATAC library requires a proper pair of Tn5 transposase cutting events at the ends of DNA.</description>
    </item>
    
    <item>
      <title>Running classic Windows game on modern MAC OS using wine</title>
      <link>https://dbrg77.github.io/posts/2016-11-17-running-classic-windows-game-on-modern-mac-os-using-wine/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2016-11-17-running-classic-windows-game-on-modern-mac-os-using-wine/</guid>
      <description>It is relatively straightforward. All you need is wine, which is a free open source software that allows you to run Windows applications (*.exe files) on unix systems (Linux, Mac OSX etc).
In this post, I’m going to use the classic game Diablo II as an example. The latest patch of Diablo II is 1.14d, which can function on modern Mac OS. However, the experience is very awful. The most annoying thing to me is that the mouse cursor freezes for ~0.</description>
    </item>
    
    <item>
      <title>Getting RefSeq gene TSS from UCSC</title>
      <link>https://dbrg77.github.io/posts/2016-11-09-getting-refseq-gene-tss-from-ucsc/</link>
      <pubDate>Wed, 09 Nov 2016 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2016-11-09-getting-refseq-gene-tss-from-ucsc/</guid>
      <description>As a practice of using the unix command lines, let&amp;rsquo;s get the transcription start site (TSS) coordinates of all hg38 RefSeq genes from the UCSC genome browser, and change it to a proper bed format:
1. Go to the UCSC genome browser.
2. Go to the table browser: Tools –&amp;gt; Table Browser.
3. Choose the following options:
clade: Mammal
genome: Human
assembly: Dec. 2013 (GRCh38/hg38)
group: Genes and Genes Predictions</description>
    </item>
    
    <item>
      <title>Common Bioinformatics Tasks With UNIX Commands</title>
      <link>https://dbrg77.github.io/posts/2016-10-20-common-bioinformatics-tasks-with-unix-commands/</link>
      <pubDate>Thu, 20 Oct 2016 00:00:00 +0800</pubDate>
      
      <guid>https://dbrg77.github.io/posts/2016-10-20-common-bioinformatics-tasks-with-unix-commands/</guid>
      <description>awk 1. Give names to each peak in a 3-column bed file:
$ cat Oct4_union_peaks.bed chr1 3062833 3063056 chr1 3343519 3343843 chr1 3482630 3483324 chr1 3549654 3549895 chr1 3648929 3649295 $ awk &amp;#39;BEGIN{OFS=&amp;#34;\t&amp;#34;}{print $1,$2,$3,&amp;#34;Oct4_union_peak_&amp;#34; NR}&amp;#39; Oct4_union_peaks.bed chr1 3062833 3063056 Oct4_union_peak_1 chr1 3343519 3343843 Oct4_union_peak_2 chr1 3482630 3483324 Oct4_union_peak_3 chr1 3549654 3549895 Oct4_union_peak_4 chr1 3648929 3649295 Oct4_union_peak_5 2. Print the number of fileds for each line:
awk &amp;#39;{print NF}&amp;#39; some_file.txt 3. Print the last column of a text file:</description>
    </item>
    
    <item>
      <title>Latex And Beamer Snippets</title>
      <link>https://dbrg77.github.io/projects/learning-latex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dbrg77.github.io/projects/learning-latex/</guid>
      <description>In 2012, when I was at the final stage of my PhD to write a thesis, I put &amp;ldquo;learning LaTeX&amp;rdquo; on my to-do list. Early 2021, I finally remove the item from the list. I read the Learn LaTeX in 30 minutes article from Overleaf, and then immediately started using it. When I encountered some problems along the way, I just Google them. This way of learning is not very systematic, but it does the job.</description>
    </item>
    
  </channel>
</rss>
